
[BASIC]

# Good variable names which should always be accepted, separated by a comma.
good-names=
    e,
    _,


[FORMAT]

# Regexp for a line that is allowed to be longer than the limit.
# URLs and pure strings, or since argument assignments to pure strings
ignore-long-lines=^\s*(# )?<?https?://\S+>?$|^\s*([^=]+=)?[f|r]?b?[\"\'\`].+[\"\'\`],?$


[DESIGN]

# Minimum number of public methods for a class (see R0903).
min-public-methods=1

[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then re-enable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable=

    # Ignore
    fixme,

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
enable=
    c-extension-no-member,
    bad-inline-option,
    file-ignored,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,


[MAIN]

# List of plugins (as comma separated values of python module names) to load,
# usually to register additional checkers.
load-plugins=
    pylint.extensions.bad_builtin,
    pylint.extensions.check_elif,
    pylint.extensions.comparetozero,
    pylint.extensions.comparison_placement,
    pylint.extensions.consider_refactoring_into_while_condition,
    pylint.extensions.dict_init_mutate,
    pylint.extensions.dunder,
    pylint.extensions.empty_comment,
    pylint.extensions.emptystring,
    pylint.extensions.for_any_all,
    pylint.extensions.no_self_use,
    pylint.extensions.overlapping_exceptions,
    pylint.extensions.private_import,
    pylint.extensions.redefined_loop_name,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.set_membership,

# Minimum Python version to use for version dependent checks. Will default to
# the version used to run pylint.
py-version=3.8


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, json
# and msvs (visual studio). You can also give a reporter class, e.g.
# mypackage.mymodule.MyReporterClass.
output-format=colorized


[SPELLING]

# Spelling dictionary name. Available dictionaries: en_US (myspell).
spelling-dict=en_US

# List of comma separated words that should not be checked.
spelling-ignore-words=
    CLI, commit's, ctags,
    distro, distros,
    HyperV, isort,
    monitoringSubject,
    namespace, Nox,
    ORM,
    PatchData, preprocessing,
    repo, repos,
    setuptools, SHA, subclassed,
    untracked,
    virtualenv,
